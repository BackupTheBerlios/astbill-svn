<?php
/*
 * AstBill  -- Billing, Routing and Management software for Asterisk and MySQL using Drupal
 *
 * www.astbill.com
 *
 * Asterisk -- A telephony toolkit for Linux.
 * Drupal   -- An Open source content management platform.
 *
 * 
 * Copyright (C) 2005, AOFFICE NOMINEE SECRETARIES LIMITED, UNITED KINGDOM.
 *
 * Andreas Mikkelborg <adoroar [Guess What?] astartelecom.com>
 * Are Casilla        <areast  [Guess What?] astartelecom.com>
 *
 *
 * This program is free software, distributed under the terms of
 * the GNU General Public License
 *
 * 2005.10.03 Version 0.9.0.8
 * 
 */



/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/


function astpbx_help($section='') {
  $output = '';
  switch ($section) {
    case "admin/modules#description":
      $output = t("AstBill User Module");
      break;
  }
  return $output;
} // function astpbx_help

function astpbx_menu($may_cache) {
  $items = array();
  $access = user_access('astpbx voip account');
  $items[] = array('path' => 'astpbx',
                                  'title' => t('astpbx voip account'),
                                  'callback' => '_astpbx_all',
                                  'access' => $access);
                                 // 'type' => MENU_CALLBACK);
  $items[] = array('path' => 'astpbx/numbers',
                                  'title' => t('Numbers Dialed'),
                                  'callback' => '_astpbx_numbers',
                                  'access' => user_access('astpbx numbers dialed'));
                                 // 'type' => MENU_DEFAULT_LOCAL_TASK);
  $items[] = array('path' => 'astpbx/numbers/ext',
                                  'title' => t('Public Numbers'),
                                  //'callback' => '_astpbx_numbers',
                                  'access' => user_access('astpbx numbers dialed'),
                                  'type' => MENU_DEFAULT_LOCAL_TASK);
  $items[] = array('path' => 'astpbx/numbers/local',
                                  'title' => t('VOIP Numbers'),
                                  'callback' => '_astpbx_numbersLocal',
                                  'access' => user_access('astpbx voip numbers dialed'),
                                  'type' => MENU_LOCAL_TASK);

  $items[] = array('path' => 'astpbx/switchboard',
                                  'title' => t('Switchboard'),
                                  'callback' => '_astpbx_switchboard',
                                  'access' => user_access('astpbx user switchboard'));
                                 // 'type' => MENU_CALLBACK);

  // By using the MENU_CALLBACK type, we can register the callback for this
  // path but not have the item show up in the menu; the admin is not allowed
  // to enable the item in the menu, either.
  $items[] = array('path' => 'astpbx/account', 'title' => t('Call Records:'),
    'callback' => 'page_astpbx_param',
    'access' => $access,
    'type' => MENU_CALLBACK);

  $items[] = array('path' => 'astbilladm', 'title' => t('AstBill Admin'),
    'callback' => '_astpbx_voipadmin',
    'access' => user_access('can use admin astpbx'),
    );
    //  'type' => MENU_CALLBACK);
    
    
  $items[] = array('path' => 'astbilladm/createaccount', 'title' => t('Create Account'),
    'callback' => '_astpbx_accounts',
    'access' => user_access('can use admin astpbx'));
    //'type' => MENU_CALLBACK);
    
  $items[] = array('path' => 'astbilladm/editaccount', 'title' => t('Account Edit'),
    'callback' => '_astpbx_accounts',
    'access' => user_access('can use admin astpbx'),
    'type' => MENU_CALLBACK);
  
  $items[] = array('path' => 'astbilladm/removeaccount', 'title' => t('Account Remove'),
    'callback' => '_astpbx_accounts_remove',
    'access' => user_access('can use admin astpbx'),
    'type' => MENU_CALLBACK);
    
  $items[] = array('path' => 'astbilladm/emailme', 'title' => t('Email User'),
    'callback' => 'page_astpbx_emailme',
    'access' => user_access('can use admin astpbx'),
    'type' => MENU_CALLBACK);

  $items[] = array('path' => 'astbilladm/status', 'title' => t('Server Status'),
     'callback' => '_admin_status',
     'access' => user_access('can use admin astpbx'),
     );
   //  'type' => MENU_CALLBACK);

  return $items;
}


/**
* Valid permissions for this module
* @return array An array of valid permissions for the astpbx module
* At this point, we'll give permission to anyone who can access site content 
* or administrate the module:
*/
function astpbx_perm() {
	return array('astpbx voip account', 'can use admin astpbx','astpbx user switchboard', 'astpbx numbers dialed', 'astpbx voip numbers dialed');
  // return array('astpbx voip account');
} // function astpbx_perm()


// ##########################################################################################################

function _astpbx_all() {
  // Used to View Valid Accounts

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  //if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
  //  drupal_access_denied();
  //  return;
  //}
  global $user;
  global $db_prefix;
  $maxline = 40; // This is the number of records to display on a page
  
  $output = '<b>'.t('Hover over Account to view Accounts Password').'</b><br><br>';

  $header = array(
    array('data' => t('Account'), 'field' => 'accountcode', 'sort' => 'asc'),
    array('data' => t('Type'), 'field' => 'tech'),
    array('data' => t('Name')),
    array('data' => t('Balance'), 'field' => 'balance'),
    array('data' => t('Expenditure'), 'field' => 'sumprice'),
    array('data' => t('Payments'), 'field' => 'sumpaid'),
    array('data' => t('Calls'), 'field' => 'countcalls'),
    array('data' => t('operations'), 'colspan' => 2)
	
  );
  $sql = "SELECT accountcode, tech, secret, accountname, sumprice, sumpaid, balance,startingcredit,countcalls FROM asvaccount2 
  where tech in (select actype from astactype) and db_prefix ='".$db_prefix."' and uid ='".$user->uid."'". tablesort_sql($header);
  //$sqlCount = "select count(*) from asvbill where accountcode = '" . $account . "'";
  //$result = pager_query($sql, $maxline, 0, $sqlCount);
  $result = pager_query($sql, $maxline);
  
  while ($res = db_fetch_object($result)) {

  $sumbalance = number_format(($res->balance + $res->startingcredit), 2);
  $sql = db_fetch_object(db_query("select value from astsystem where name = 'TopUpURL' and serverid = 'DEF'"));
	$rows[] = array('<a title="Password: '.$res->secret.'"  href="'.url('astpbx/account/'.$res->accountcode).'">'. '<b>'.$res->accountcode.'</b>' . '</a>&nbsp;&nbsp;&nbsp;',
	//$res->tech.'&nbsp;&nbsp;&nbsp;',
	'<img border="0" src="files/astar/'.$res->tech.'.gif">',
		$res->accountname.'&nbsp;&nbsp;&nbsp;', 
	    array('data' => '<b>'.$sumbalance.'</b>', 'align' => 'right'),
		array('data' => $res->sumprice, 'align' => 'right'),
		array('data' => $res->sumpaid, 'align' => 'right'),
		array('data' => $res->countcalls, 'align' => 'right'),
    // '&nbsp;&nbsp;'.l(t('View'), 'astpbx/account/'.$res->accountcode, null),
	'&nbsp;&nbsp;&nbsp;<a href="'.url('astpbx/account/'.$res->accountcode).'"><img border="0" src="files/astar/view.gif"></a>',
	'&nbsp;&nbsp;<a href="'.$sql->value.'"><img border="0" src="files/astar/topup.gif"></a>'
	);
  }

  $pager = theme('pager', null, $maxline, 0, tablesort_pager()); 
  if (!empty($pager)) {
    $rows[] = array(array('data' => $pager, 'colspan' => 8));
  }

  $output .= (count($rows) == 0) ? t('No Accounts for this User.') : theme('table', $header, $rows);
  
  _astpbx_printtheme($output, $account);

}

// ##########################################################################################################

function page_astpbx_param($account = 0) {
  // Used to View calling Records

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
    drupal_access_denied();
    return;
  }
  global $user;

  // Do not let anonymous users have access, even if the admin decides this
   if ($user->uid != 0 && user_access('astpbx voip account')) {
  
  // Only allow admin access for all accounts
if (!user_access('can use admin astpbx')){
  $result = db_query("SELECT uid FROM astaccount WHERE accountcode = '".$account."'");
  //while ($uid = db_fetch_object($result)) {
  //  $uid->uid;
  //}
  $uid = db_fetch_object($result);
  if ($uid->uid <> $user->uid) {
      drupal_access_denied();
    return;
 }}

  
  $maxline = 40; // This is the number of records to display on a page

  $header = array(
    array('data' => t('Time of call'), 'field' => 'date_created', 'sort' => 'desc'),
    array('data' => t('Destination'), 'field' => 'callednum'),
    array('data' => t('Duration hh:mm:ss'), 'field' => 'billtime'),
    array('data' => t('Price Rate/min'), 'field' => 'pricerate'),
    array('data' => t('Charge'), 'field' => 'price')
    //array('data' => t('operations'), 'colspan' => 2)
  );
  $sql = 'select date_created,datec,callednum,billtime, billtime2,pricerate,price from asvbill where accountcode = '. db_escape_string($account). tablesort_sql($header);
  $sqlCount = "select count(*) from asvbill where accountcode = '" . $account . "'";
  $result = pager_query($sql, $maxline, 0, $sqlCount);
  //$result = pager_query($sql, 10);

  while ($res = db_fetch_object($result)) {
   
	$rows[] = array($res->datec.'&nbsp;&nbsp;&nbsp;',$res->callednum.'&nbsp;&nbsp;&nbsp;', 
	array('data' => $res->billtime2, 'align' => 'right'), array('data' => $res->pricerate, 'align' => 'right'), 
	array('data' => $res->price, 'align' => 'right'));
  }

  $pager = theme('pager', null, $maxline, 0, tablesort_pager()); 
  if (!empty($pager)) {
    $rows[] = array(array('data' => $pager, 'colspan' => 5));
  }

  $output .= (count($rows) == 0) ? t('No Records for this Account.') : theme('table', $header, $rows);
  
  _astpbx_printtheme($output, $account);

  // Not a logged in user or has no rights
  } else {
    drupal_access_denied();
  }
}
// ##########################################################################################################

function _astpbx_printtheme($page_content, $account) {
$output = '<div class="node "><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr><td class="corner_img_l">&#160;</td><td><h1 class="nodetitle">'.t('Account -').' '.$account.'</h1></td><td class="corner_img_r">&#160;</td></tr></table></div>';

  $output .= '<div class="nodecontent">' . $page_content . "</div>\n";
  // $output .= '<div class="astpbx">' . $page_content . "</div>\n";
  print theme("page", $output);
}

// ##########################################################################################################

// ##########################################################################################################

function _astpbx_voipadmin() {
  global $user;
  global $db_prefix; 

  $edit = $_POST["edit"];
  $op = $_POST["op"];



  switch (($op ? $op : arg(1))) {

	case t('Go'):
		$value = $edit['filteracc'];	
		$output .= _astpbx_voipadmin_list($value);
		$title = t('View');
	break;

	
    default:
    $output .= _astpbx_voipadmin_list($value);

  }
  
    _astpbx_printtheme($output, $account);
  
}

function _astpbx_voipadmin_list($value) {
  // Used to View All Accounts

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  //if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
  //  drupal_access_denied();
  //  return;
  //}
  global $user;
  global $db_prefix;
  $maxline = 40; // This is the number of records to display on a page

  
  
  $output = '
<form action="'.url('/astbilladm').'" method="post">
<div class="form-item">
<B>'.t('Search for Accountcode').'&nbsp;&nbsp;</B>
<input type="text" size="20" value="'.$value.'" name="edit[filteracc]" alt="Enter a term to search" />&#160;
<input type="submit" name="op" value="'.('Go').'" />&#160;&#160;
</div></form>
';
  
  
  $output .= '<b>'.t('Hover over Account to view Accounts Password').'</b><br><br>';

  $header = array(
    array('data' => t('User')),
    array('data' => t('Account'), 'field' => 'accountcode', 'sort' => 'asc'),
    array('data' => t('Type'), 'field' => 'tech'),
    array('data' => t('Name'), 'field' => 'accountname'),
    array('data' => t('Balance')),
    array('data' => t('Expenditure')),
    array('data' => t('Payments')),
    array('data' => t('Calls')),
    array('data' => t('operations'), 'colspan' => 4)
	
  );
 // $sql = "SELECT accountcode, tech, secret, accountname, sumprice, sumpaid, balance,countcalls FROM asvaccount2 
 // where (tech = 'SIP' or tech = 'IAX' or tech = 'VIR') ". tablesort_sql($header);

 if (!empty($value)) {
  $value = trim($value);
  //$sql = "SELECT accountcode, tech, secret, accountname, sumprice, sumpaid, balance,countcalls FROM asvaccount2 where accountcode LIKE '%".$value."%'". tablesort_sql($header);
  $sql = "SELECT accountcode, tech, secret, startingcredit, usr.uid, usr.name, LEFT(accountname,15) as accountname FROM astaccount, {users} usr where astaccount.uid = usr.uid and db_prefix ='".$db_prefix."' and tech in (select actype from astactype) AND accountcode LIKE '%".$value."%'". tablesort_sql($header);

 } else {

  $sql = "SELECT accountcode, tech, secret, startingcredit, usr.uid, usr.name, LEFT(accountname,15) as accountname FROM astaccount, {users} usr where astaccount.uid = usr.uid and db_prefix ='".$db_prefix."' and tech in (select actype from astactype)". tablesort_sql($header);
 
 }
 
 
  //$sqlCount = "select count(*) from asvbill where accountcode = '" . $account . "'";
  //$result = pager_query($sql, $maxline, 0, $sqlCount);
  $result = pager_query($sql, $maxline);
  
  while ($res = db_fetch_object($result)) {
       
	   $sumpaid = db_fetch_object(db_query("SELECT round(Sum(astpayment.paidamount), 2) AS sumpaid FROM astpayment WHERE astpayment.accountcode = '%s'", $res->accountcode));
       
       $cdrcost = db_fetch_object(db_query("SELECT round((Sum(astcdr.price)/100),2) AS sumprice FROM astcdr where dialstatus like 'ANSWER%%' and answeredtime <> 0 and trunk <> 'Local' AND accountcode = '%s'", $res->accountcode));
       
	   $countcalls = db_fetch_object(db_query("SELECT count(*) AS countcalls FROM astcdr where dialstatus like 'ANSWER%%' and answeredtime <> 0 and trunk <> 'Local' AND accountcode = '%s'", $res->accountcode));
       
       if (empty($sumpaid->sumpaid)) {$sumpaid->sumpaid = 0;}
	   if (empty($cdrcost->sumprice)) {$cdrcost->sumprice = 0;}
	   if (empty($countcalls->countcalls)) {$countcalls->countcalls = 0;}

	   $sumbalance =  number_format(($sumpaid->sumpaid + $res->startingcredit - $cdrcost->sumprice), 2);
	   $sql = db_fetch_object(db_query("select value from astsystem where name = 'TopUpURL' and serverid = 'DEF'"));
       $rows[] = array(
	'<A HREF="'.url('user/'.$res->uid).'">'.$res->name.'</A>',
	'<a title="Password: '.$res->secret.'"  href="'.url('astpbx/account/'.$res->accountcode).'">'. '<b>'.$res->accountcode.'</b>' . '</a>&nbsp;&nbsp;&nbsp;',
	'<img border="0" src="files/astar/'.$res->tech.'.gif">',
		$res->accountname.'&nbsp;&nbsp;&nbsp;', 
	        array('data' => '<b>'.$sumbalance.'</b>', 'align' => 'right'), // Balance
		array('data' => $cdrcost->sumprice, 'align' => 'right'), // Expenditure
		array('data' => $sumpaid->sumpaid, 'align' => 'right'), // Payments
		array('data' => $countcalls->countcalls.'&nbsp;&nbsp;', 'align' => 'right'), // Calls
	'&nbsp;&nbsp;&nbsp;<a href="'.url('astpbx/account/'.$res->accountcode).'"><img border="0" src="files/astar/view.gif"></a>',
	'&nbsp;&nbsp;&nbsp;<a href="'.url('astbilladm/editaccount/'.$res->accountcode).'"><img border="0" src="files/astar/edit.gif"></a>',
	'&nbsp;&nbsp;<a href="'.$sql->value.'"><img border="0" src="files/astar/topup.gif"></a>',
	'&nbsp;&nbsp;<a href="'.url('astbilladm/removeaccount/'.$res->uid.'/'.$res->accountcode).'">'.t('Remove').'</a>'
	
	//	array('data' => $res->accountcode, 'align' => 'right')

	);
  }

  $pager = theme('pager', null, $maxline, 0, tablesort_pager()); 
  if (!empty($pager)) {
    $rows[] = array(array('data' => $pager, 'colspan' => 8));
  }

  $output .= (count($rows) == 0) ? t('No Accounts for this User.') : theme('table', $header, $rows);

  return $output;
}


function _admin_astpbx_OLD() {
  // Used to View ALL Accounts

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  //if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
  //  drupal_access_denied();
  //  return;
  //}
  global $user;
  global $db_prefix; 

  // Do not let anonymous users have access, even if the admin decides this
  if ($user->uid != 0 && user_access('astpbx voip account')) {
  
  $maxline = 40; // This is the number of records to display on a page

  $output = '<b>'.t('Hover over Account to view Accounts Password').'</b><br><br>';

  $header = array(
    array('data' => t('Account'), 'field' => 'accountcode', 'sort' => 'asc'),
    array('data' => t('Type'), 'field' => 'tech'),
    array('data' => t('Name')),
    array('data' => t('Balance'), 'field' => 'balance'),
    array('data' => t('Expenditure'), 'field' => 'sumprice'),
    array('data' => t('Payments'), 'field' => 'sumpaid'),
    array('data' => t('Calls'), 'field' => 'countcalls'),
    array('data' => t('operations'), 'colspan' => 2)
	
  );
  $sql = "SELECT accountcode, tech, secret, accountname, sumprice, sumpaid, balance,countcalls FROM asvaccount2 
  where (tech = 'SIP' or tech = 'IAX' or tech = 'VIR' or tech = 'H323') ". tablesort_sql($header);
  

  //$sqlCount = "select count(*) from asvbill where accountcode = '" . $account . "'";
  //$result = pager_query($sql, $maxline, 0, $sqlCount);
  $result = pager_query($sql, $maxline);
  
  while ($res = db_fetch_object($result)) {
   $sql = db_fetch_object(db_query("select value from astsystem where name = 'TopUpURL' and serverid = 'DEF'"));
	$rows[] = array('<a title="Password: '.$res->secret.'"  href="'.url('astpbx/account/'.$res->accountcode).'">'. '<b>'.$res->accountcode.'</b>' . '</a>&nbsp;&nbsp;&nbsp;',
	//$res->tech.'&nbsp;&nbsp;&nbsp;',
	'<img border="0" src="files/astar/'.$res->tech.'.gif">',
		$res->accountname.'&nbsp;&nbsp;&nbsp;', 
	    array('data' => '<b>'.$res->balance.'</b>', 'align' => 'right'),
		array('data' => $res->sumprice, 'align' => 'right'),
		array('data' => $res->sumpaid, 'align' => 'right'),
		array('data' => $res->countcalls, 'align' => 'right'),
    // '&nbsp;&nbsp;'.l(t('View'), 'astpbx/account/'.$res->accountcode, null),
	'&nbsp;&nbsp;&nbsp;<a href="'.url('astpbx/account/'.$res->accountcode).'"><img border="0" src="files/astar/view.gif"></a>',
	'&nbsp;&nbsp;<a href="'.$sql->value.'"><img border="0" src="files/astar/topup.gif"></a>'
	);
  }

  $pager = theme('pager', null, $maxline, 0, tablesort_pager()); 
  if (!empty($pager)) {
    $rows[] = array(array('data' => $pager, 'colspan' => 8));
  }

  $output .= (count($rows) == 0) ? t('No Accounts for this User.') : theme('table', $header, $rows);
  
  _astpbx_printtheme($output, $account);

  // Not a logged in user or has no rights
  } else {
    drupal_access_denied();
  }
}


function _admin_status() {
$myjava = '
<script type="text/javascript">
var p;

function GetXMLH()
{
	try {
	  p = new XMLHttpRequest();
	} catch (e) {
	  p = new ActiveXObject("Msxml2.XMLHTTP");
	}
	var interactiveCount = 0;
	// p.onload would also work in Mozilla
	p.onreadystatechange = LoadChannels;
	try {
	  // Needed for Mozilla if local file tries to access an http URL
	  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	} catch (e) {
	  // ignore
	}
	postq = "num=207&uid=' . $user->uid . '&sec=9dkdf4fs476djt=" + Math.random();
	p.open("GET", "ajax/getchannel.php?" + postq);
	p.send(postq);
	setTimeout("GetXMLH()",1000);
}

function LoadChannels()
{
  if (p.readyState == 3) {
    interactiveCount++;
  }
  if (p.readyState != 4)
    return;
	var myresp = p.responseText;
	var myresp_line=myresp.split("\n");
	var myresp_array=myresp_line[0].split("|");
    var loop_ct = 1;

  document.getElementById("ast1").firstChild.nodeValue = p.responseText;
}
GetXMLH();
</script>
';
  global $user;


  // Do not let anonymous users have access, even if the admin decides this
  if ($user->uid != 0 && user_access('astpbx voip account')) {

	  
	  $sql = db_fetch_object(db_query("SELECT asteriskversion FROM aststatus"));
	  $output = "<pre>".$sql->asteriskversion."</PRE>";
 //$output = "<pre>Your PABX is: Asterisk 1.0.9 built by root@buzzbud on a i686 running Linux\n</pre>";
 // $output .= "<pre>System uptime: 6 hours, 46 minutes, 31 seconds\n</pre>";


 $output .= $myjava . "<strong><pre>Caller  Calling Time of Call          Remote Channel</pre></strong>";
 
// Remote Channel	 Caller  Calling Time of Call
// SIP/70103-74d1   70103   70108   2005-08-13 14:47:52


 $output .= '<pre id="ast1">                                                    </pre>';

  print theme("page", $output);

  // Not a logged in user or has no rights
  } else {
    drupal_access_denied();
  }
}

// ##########################################################################################################

function _astpbx_numbers() {
  // Used to View Valid Accounts

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  //if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
  //  drupal_access_denied();
  //  return;
  //}
  global $user;
  global $db_prefix; 

  $myjava = '
<script type="text/javascript">
var p;
var i = 0;

function PostCall(callnum)
{

	// alert("having fun");

	// We have to ensure the user dont click and click
    if (i != 0) return;
    i = 1;
	// document.getElementById("btncall").disabled=true;


	try {
	  p = new XMLHttpRequest();
	} catch (e) {
	  p = new ActiveXObject("Msxml2.XMLHTTP");
	}
	var interactiveCount = 0;
	// p.onload would also work in Mozilla
	p.onreadystatechange = LoadCalls;
	try {
	  // Needed for Mozilla if local file tries to access an http URL
	  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	} catch (e) {
	  // ignore
	}
	postq = "q=" + callnum + "/' . $user->uid . '&sec=9dkd8d76dj&tt=" + Math.random();
	p.open("GET", "ajax/postcalls.php?" + postq);
	// postq = "num=" + callnum + "&uid=' . $user->uid . '&sec=9dkd8d76dj&tt=" + Math.random();
	// p.open("GET", "/cgi2-bin/post2calls.pl?" + postq);
	p.send(postq);
}

function LoadCalls()
{
  if (p.readyState != 4)
    return;
	var myresp = p.responseText;
	var myresp_line=myresp.split("\n");
	var myresp_array=myresp_line[0].split("|");
    var loop_ct = 1;

  document.getElementById("call").firstChild.nodeValue = p.responseText;
  setTimeout("ClearCall()",14000);
}

function ClearCall()
{
	document.getElementById("call").firstChild.nodeValue = "";
	// It is ok to click again
    i = 0;
}
function rand()
  {now=new Date()
   num=(now.getSeconds())%10
   num=num+1
}

</script>
';

  // Do not let anonymous users have access, even if the admin decides this
  if ($user->uid != 0 && user_access('astpbx voip account')) {
  
  $maxline = 40; // This is the number of records to display on a page

  $output = '<b>'.t('Click on the Call Button to Call').'</b><br>';
  $output .= $myjava . '<pre id="call">&nbsp;&nbsp;&nbsp;&nbsp;</pre>';

  $header = array(
    array('data' => t('No Calls'), 'field' => 'CountOfcallednum', 'sort' => 'asc'),
    array('data' => t('Number Dialed'), 'field' => 'callednum'),
    array('data' => t('Name'), 'field' => 'name'),
    array('data' => t('operations'), 'colspan' => 2)
	
  );

	$sql  = "SELECT Count(astcdr.callednum) AS CountOfcallednum, astcdr.callednum, ";
	$sql .= "LEFT(CONCAT_WS(' ', last_name, first_name),18) AS name ";
	$sql .= "FROM (astcdr INNER JOIN astaccount ON astcdr.accountcode = astaccount.accountcode) ";
	$sql .= "LEFT JOIN {contact_directory} cd ON astcdr.callednum = cd.phone ";
	$sql .= "WHERE (((astaccount.uid)='" . $user->uid . "') and db_prefix ='".$db_prefix."' AND ((astcdr.trunk)<>'Local') AND ((astcdr.dialstatus)='ANSWER')) ";
	$sql .= "GROUP BY astcdr.callednum, cd.first_name ";
	$sql .= "ORDER BY Count(astcdr.callednum) DESC ";

  //$sqlCount = "select count(*) from asvbill where accountcode = '" . $account . "'";
  //$result = pager_query($sql, $maxline, 0, $sqlCount);
  $result = pager_query($sql, $maxline);
  
  while ($res = db_fetch_object($result)) {
   
	$rows[] = array($res->CountOfcallednum.'&nbsp;&nbsp;&nbsp;',$res->callednum.'&nbsp;&nbsp;&nbsp;',
		$res->name.'&nbsp;&nbsp;&nbsp;',
	  '<a title="Click to Call this number" href="javascript:PostCall(' . $res->callednum . ')"><img border="0" id="btncall" src="files/astar/call.gif"></a>', '&nbsp;&nbsp;<a href="'.url('astcontact/astpbx/'.$res->callednum).'">'.t('Edit Contact').'</a>');

	//  '<a href="astpbx/numbers" onclick="PostCall();return false;">Call</a>');
	// '<img border="0" src="files/astar/call.gif" title="Click to Call this number">');
  }

  $pager = theme('pager', null, $maxline, 0, tablesort_pager()); 
  if (!empty($pager)) {
    $rows[] = array(array('data' => $pager, 'colspan' => 8));
  }

  $output .= (count($rows) == 0) ? t('No Calls for this User.') : theme('table', $header, $rows);
  
  $outputLine = '<div class="node "><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr><td class="corner_img_l">&#160;</td><td><h1 class="nodetitle">'.t('Last Numbers Dialed').'</h1></td><td class="corner_img_r">&#160;</td></tr></table></div>';

  $output = $outputLine . '<div class="nodecontent">' . $output . "</div>\n";
  // $output .= '<div class="astpbx">' . $page_content . "</div>\n";
  print theme("page", $output);

  
  // Not a logged in user or has no rights
  } else {
    drupal_access_denied();
  }
}


function _astpbx_switchboard() {
  global $user;
$myjava = '
<script type="text/javascript">
var p;

function GetSwitch()
{
	try {
	  p = new XMLHttpRequest();
	} catch (e) {
	  p = new ActiveXObject("Msxml2.XMLHTTP");
	}
	var interactiveCount = 0;
	// p.onload would also work in Mozilla
	p.onreadystatechange = LoadSwitch;
	try {
	  // Needed for Mozilla if local file tries to access an http URL
	  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	} catch (e) {
	  // ignore
	}

	postq = "q=' . $user->uid . '&sec=9dkd8d76dj&tt=" + Math.random();
	p.open("GET", "ajax/switchbrd.php?" + postq);
	//p.open("GET", "/cgi2-bin/swit2chbrd.pl?" + postq);
	p.send(postq);
	setTimeout("GetSwitch()",1000);
}

function LoadSwitch()
{
  if (p.readyState == 3) {
    interactiveCount++;
  }
  if (p.readyState != 4)
    return;
	var myresp = p.responseText;
	var myresp_line=myresp.split("\n");
	var myresp_array=myresp_line[0].split("|");
    var loop_ct = 1;

  document.getElementById("ast22").firstChild.nodeValue = p.responseText;
}
GetSwitch();
</script>
';
  global $user;

  // Do not let anonymous users have access, even if the admin decides this
  if ($user->uid != 0 && user_access('user switchboard')) {
  

 // $output = "<pre>Your PABX is: Asterisk 1.0.9 built by root@buzzbud on a i686 running Linux\n</pre>";
 // $output .= "<pre>System uptime: 6 hours, 46 minutes, 31 seconds\n</pre>";


 $output .= $myjava . "<strong><pre>Caller  Calling Time of Call          Remote Channel</pre></strong>";
 
// Remote Channel	 Caller  Calling Time of Call
// SIP/70103-74d1   70103   70108   2005-08-13 14:47:52
// CLIENT CHANNEL	REMOTE CHANNEL	RECORD	HANGUP	XFER	PARK


 $output .= '<pre id="ast22">                                                    </pre>';

  print theme("page", $output);

  // Not a logged in user or has no rights
  } else {
    drupal_access_denied();
  }
}

// ##########################################################################################################

function _astpbx_numbersLocal() {
  // Used to View Valid Accounts

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  //if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
  //  drupal_access_denied();
  //  return;
  //}
  global $user;
  global $db_prefix; 
  $myjava = '
<script type="text/javascript">
var p;
var i = 0;

function PostCall(callnum)
{

	// alert("having fun");

	// We have to ensure the user dont click and click
    if (i != 0) return;
    i = 1;
	// document.getElementById("btncall").disabled=true;


	try {
	  p = new XMLHttpRequest();
	} catch (e) {
	  p = new ActiveXObject("Msxml2.XMLHTTP");
	}
	var interactiveCount = 0;
	// p.onload would also work in Mozilla
	p.onreadystatechange = LoadCalls;
	try {
	  // Needed for Mozilla if local file tries to access an http URL
	  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	} catch (e) {
	  // ignore
	}
	postq = "q=" + callnum + "/' . $user->uid . '&sec=9dkd8d76dj&tt=" + Math.random();
	p.open("GET", "ajax/postcalls.php?" + postq);
	p.send(postq);
}

function LoadCalls()
{
  if (p.readyState != 4)
    return;
	var myresp = p.responseText;
	var myresp_line=myresp.split("\n");
	var myresp_array=myresp_line[0].split("|");
    var loop_ct = 1;

  document.getElementById("call").firstChild.nodeValue = p.responseText;
  setTimeout("ClearCall()",14000);
}

function ClearCall()
{
	document.getElementById("call").firstChild.nodeValue = "";
	// It is ok to click again
    i = 0;
}
function rand()
  {now=new Date()
   num=(now.getSeconds())%10
   num=num+1
}

</script>
';

  // Do not let anonymous users have access, even if the admin decides this
  if ($user->uid != 0 && user_access('astpbx voip account')) {
  
  $maxline = 40; // This is the number of records to display on a page

  $output = '<b>'.t('Click on the Call Button to Call').'</b><br>';
  $output .= $myjava . '<pre id="call">&nbsp;&nbsp;&nbsp;&nbsp;</pre>';

  $header = array(
    array('data' => t('No Calls'), 'field' => 'CountOfcallednum', 'sort' => 'asc'),
    array('data' => t('Number Dialed'), 'field' => 'callednum'),
    array('data' => t('Name'), 'field' => 'name'),
    array('data' => t('operations'), 'colspan' => 2)
	
  );

	$sql  = "SELECT Count(astcdr.callednum) AS CountOfcallednum, astcdr.callednum, ";
	$sql .= "LEFT(CONCAT_WS(' ', last_name, first_name),18) AS name ";
	$sql .= "FROM (astcdr INNER JOIN astaccount ON astcdr.accountcode = astaccount.accountcode) ";
	$sql .= "LEFT JOIN {contact_directory} cd ON astcdr.callednum = cd.phone ";
	$sql .= "WHERE (((astaccount.uid)='" . $user->uid . "') and db_prefix ='".$db_prefix."' AND ((astcdr.trunk)='Local') AND ((astcdr.dialstatus)='ANSWER')) ";
	$sql .= "GROUP BY astcdr.callednum, cd.first_name ";
	$sql .= "ORDER BY Count(astcdr.callednum) DESC ";


  //$sqlCount = "select count(*) from asvbill where accountcode = '" . $account . "'";
  //$result = pager_query($sql, $maxline, 0, $sqlCount);
  $result = pager_query($sql, $maxline);
  
  while ($res = db_fetch_object($result)) {
   
	$rows[] = array($res->CountOfcallednum.'&nbsp;&nbsp;&nbsp;',$res->callednum.'&nbsp;&nbsp;&nbsp;',
		$res->name.'&nbsp;&nbsp;&nbsp;', 
	  '<a title="Click to Call this number" href="javascript:PostCall(' . $res->callednum . ')"><img border="0" id="btncall" src="files/astar/call.gif"></a>', '&nbsp;&nbsp;<a href="'.url('astcontact/astpbx/'.$res->callednum).'">'.t('Edit Contact').'</a>');

	//  '<a href="astpbx/numbers" onclick="PostCall();return false;">Call</a>');
	// '<img border="0" src="files/astar/call.gif" title="Click to Call this number">');
  }

  $pager = theme('pager', null, $maxline, 0, tablesort_pager()); 
  if (!empty($pager)) {
    $rows[] = array(array('data' => $pager, 'colspan' => 8));
  }

  $output .= (count($rows) == 0) ? t('No Calls for this User.') : theme('table', $header, $rows);
  
  $outputLine = '<div class="node "><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr><td class="corner_img_l">&#160;</td><td><h1 class="nodetitle">'.t('Last Numbers Dialed').'</h1></td><td class="corner_img_r">&#160;</td></tr></table></div>';

  $output = $outputLine . '<div class="nodecontent">' . $output . "</div>\n";
  // $output .= '<div class="astpbx">' . $page_content . "</div>\n";
  print theme("page", $output);

  
  // Not a logged in user or has no rights
  } else {
    drupal_access_denied();
  }
}

// BEGIN ACCOUNTS STUFF

function _astpbx_accounts() {
  global $user;
  global $db_prefix; 
  $edit = $_POST["edit"];
  $op = $_POST["op"];

    // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
if (arg(1) == 'editaccount') { 
  if (!is_numeric(arg(2))) {
    // We will just show a standard "access denied" page in this case.
    drupal_access_denied();
    return;
}}

$account = arg(2);

//print_r($account);

  switch (($op ? $op : $account)) {
    case t('Save'):
      $title = t('Edit Account');
      if (_astpbx_accounts_validate($edit)) {
        _astpbx_accounts_save($edit,$account);
        drupal_goto("astbilladm");
      } else {
		drupal_goto("astbilladm/editaccount/".$account);
	  }
	  
    case t('Create'):
      $title = t('Create Account');
      if (_astpbx_accounts_validate($edit)) {
        _astpbx_accounts_save($edit,arg(2));
        drupal_goto("astbilladm");
      } else {
		drupal_goto("astbilladm/createaccount/".$account);
	  }
	  
    case t('Back'):
	drupal_goto("astbilladm");
      break;
    default:
	  $output = _astpbx_accounts_form(_astpbx_accounts_load($account));
      // $output = astpbx_form($edit);
  }

  if (arg(1) == 'createaccount') {
	  $title = t('Create');
  } else {
	  $title = t('Change');
  }
  
$account = '';
_astentry_printtheme_best($output, $account, $title);
	
}

function _astpbx_accounts_remove() { // DANGER! REMOVING ACCOUNTS IS NOT WISE :D
  global $user;

  	$pass = '1';
	$errors = array();
  	$checkcdr = db_fetch_object(db_query("select count(*) count from astcdr where accountcode = '%s'", arg(3)));
	$checkpayment = db_fetch_object(db_query("select count(*) count from astpayment where accountcode = '%s'", arg(3)));
	
	if ($checkcdr->count != '0') {
		$errors["checkcdr"] = t("Unable to delete, Account has Call Data Records.");
		$pass = '0';
	}
	if ($checkpayment->count != '0') {
		$errors["checkpayment"] = t("Unable to delete, Account has Payments.");
		$pass = '0';
	}
	
	
	if ($pass == '1') {
	
	$edit = $_POST['edit'];

	$deletedmsg = 'The account was deleted';
	$confirmmsg = '<P>Are you sure you want to delete this account?</P>';
	$dbquery = "DELETE FROM astaccount WHERE uid = '".arg(2)."' AND accountcode = '".arg(3)."'";
	$goto = "astbilladm";
	$item = arg(3);

	$output = astadmin_confirm_delete($edit, $deletedmsg, $confirmmsg, $dbquery, $goto, $item);
	
	} else {
		  foreach ($errors as $name => $message) {
			  form_set_error($name, $message);
		  } 
		drupal_goto("astbilladm");
		
	}

}


// BEGIN FORM STUFF

function _astpbx_accounts_validate($edit) {
  $myerror = 1;
  $errors = array();

  
  if ($edit['lowbalanceemail'] == '1') {
	  if (valid_email_address($edit['mailboxemail'])){
		  $myerror = 1;
	  } else {
		  $errors['mailboxemail'] = t('Please enter a valid email address');
		  $myerror = 0;
  } }

 if (arg(1) == 'createaccount') {

	 $sql = db_fetch_object(db_query("SELECT accountcode FROM astaccount WHERE accountcode = '%s'", $edit['accountcode']));
	 if (!empty($sql->accountcode)) {
		 $errors['accountcode'] = t('The accountcode already exists');
		 $myerror = 0;
	 }
	 
	   if (empty($edit['accountcode'])) {
	  $errors['accountempty'] = t('Please enter a unique accountcode');
	  $myerror = 0;
	   }
  
	   if (!is_numeric($edit['accountcode'])) {
	  $errors['accountnumeric'] = t('Please enter an accountcode with numbers only');
	  $myerror = 0;
	   }
	 
 }


  foreach ($errors as $name => $message) {
    form_set_error($name, $message);
  } 
  return $myerror;
}


function _astpbx_accounts_save($edit, $account) {
  global $user;
  global $db_prefix;

  
if ($edit['qualify'] == 0) {$qualify = 'yes';}
if ($edit['qualify'] == 1) {$qualify = 'no';}
if ($edit['nat'] == 0) {$nat = 'yes';}
if ($edit['nat'] == 1) {$nat = 'no';}
if ($edit['nat'] == 2) {$nat = 'never';}
if ($edit['nat'] == 3) {$nat = 'route';}

$tech = "NONE";
if ($edit['tech'] == 0) {$tech = "SIP";} 
if ($edit['tech'] == 1) {$tech = "IAX";} 
if ($edit['tech'] == 2) {$tech = "VIR";} 
if ($edit['tech'] == 3) {$tech = "H323";} 


if (arg(1) == 'editaccount') {

  // Make sure you don't trust the URL to be safe! Always check for exploits.
  //if (!is_numeric($alice) || !is_numeric($bob)) {
  if (!is_numeric($account)) {
    // We will just show a standard "access denied" page in this case.
    drupal_access_denied();
    return;
  }


 $presql = db_fetch_object(db_query("SELECT uid, db_prefix FROM astaccount WHERE accountcode = '%s'", $account));
 $sql = db_fetch_array(db_query("select mail FROM {users} WHERE uid = %s", $presql->uid));

 if ($sql['mail'] == $edit['mailboxemail']){
	$mailboxemail = '';
 } else {
	$mailboxemail = $edit['mailboxemail'];
 }


 db_query("
 UPDATE astaccount SET language = '%s', secret = '%s', context = '%s', tech = '%s', nat = '%s', qualify = '%s', hardwareid = '%s', forwardto = '%s', lowbalance = '%s', lowbalanceemail = '%s',
 callerid = '%s', accountname = '%s', mailboxemail = '%s', active = '%s' WHERE db_prefix ='".$db_prefix."' and accountcode = '%s'", 
 $edit['language'], $edit['secret'], $edit['context'], $tech, $nat, $qualify, $edit['hardwareid'], $edit['forwardto'], $edit['lowbalance'], $edit['lowbalanceemail'], 
 $edit['callerid'], $edit['accountname'], $mailboxemail, $edit['active'], $account);

 db_query("UPDATE astuser SET brand = '%s', countryprefix = '%s', callbackto = '%s' WHERE db_prefix ='".$db_prefix."' and uid = '%s'", 
 $edit['brand'], $edit['countryprefix'], $edit['callbackto'], $presql->uid);

 
   drupal_set_message(t('The Account settings have been updated.'));
}
  
  
  if (arg(1) == 'createaccount') {

	  if (empty($edit['mailboxemail'])) {
		  $sql = db_fetch_array(db_query("select mail FROM ".$db_prefix."users WHERE uid = %s", $edit['account']));
		  $mailboxemail = $sql->mail;
	  }

	  $secret = rand(10000, 99999);
	  
db_query("INSERT INTO astaccount (secret, language, uid, accountcode, tech, nat, qualify, hardwareid, forwardto, lowbalance, lowbalanceemail, callerid, accountname, mailboxemail, active, date_created)
VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', now())",
$secret, $edit['language'], $edit['account'], $edit['accountcode'], $tech, $nat, $qualify, $edit['hardwareid'], $edit['forwardto'], $edit['lowbalance'], $edit['lowbalanceemail'], $edit['callerid'], $edit['accountname'], $mailboxemail, $edit['active']);

//db_query("UPDATE astuser SET brand = '%s', countryprefix = '%s', callbackto = '%s' WHERE uid = '%s'", $edit['brand'], $edit['countryprefix'], $edit['callbackto'], $edit['account']);


  drupal_set_message(t('The Account '.$edit['accountcode'].' has been created.'));
  }
  

}


function _astpbx_accounts_form($edit = null) {
  global $user;
  global $db_prefix;



if (arg(1) == 'editaccount') {
	

  $tech = 9;
  if ($edit['tech'] == "SIP") {$tech = 0;} 
  if ($edit['tech'] == "IAX") {$tech = 1;} 
  if ($edit['tech'] == "VIR") {$tech = 2;} 
  if ($edit['tech'] == "H323") {$tech = 3;} 


  if(empty($edit['mailboxemail'])){
  $sql = db_fetch_array(db_query("select mail FROM ".$db_prefix."users WHERE uid = %s", $edit['uid']));
  $mailboxemail = $sql['mail'];
  } else {
	  $mailboxemail = $edit['mailboxemail'];
  }

  
  if ($edit['qualify'] == 'yes') {$qualify = 0;}
  if ($edit['qualify'] == 'no') {$qualify = 1;}
  if ($edit['nat'] == 'yes') {$nat = 0;}
  if ($edit['nat'] == 'no') {$nat = 1;}
  if ($edit['nat'] == 'never') {$nat = 2;}
  if ($edit['nat'] == 'route') {$nat = 3;}
  
  
  $getastuser = db_fetch_array(db_query("select brand, countryprefix, callbackto FROM astuser WHERE uid = %s", $edit['uid']));
  
  $accountcode = arg(2);
  
  }
  
  
if (arg(1) == 'createaccount') {

$tech = NULL;
$edit['forwardto'] = NULL;
$edit['accountname'] = NULL;
$edit['callerid'] = NULL;
$edit['hardwareid'] = NULL;
$edit['lowbalance'] = '5';
$edit['lowbalanceemail'] = 0;
$edit['active'] = 1;
$nat = NULL;
$qualify = NULL;
$getastuser['brand'] = NULL;
$getastuser['countryprefix'] = NULL;
$getastuser['callbackto'] = NULL;
$accountcode = NULL;
$mailboxemail = NULL;

$sql2 = db_query("select name, uid from ".$db_prefix."users");

$users = array();

while ($items = db_fetch_object($sql2)) {
	array_push2($users, $items->uid.' '.$items->name, $items->uid);
}

$group = form_select(t('User/Owner of this account'), 'account', $edit['uid'], $users);
$group .= form_textfield(t("Account code"), "accountcode", $accountcode, 30, 30, null, null, false);
}

$sql = db_query("select language, languagename from astlanguage");

$languagelist = array();

while ($item = db_fetch_object($sql)) {
	array_push2($languagelist, $item->languagename, $item->language);
}

$sql = db_query("select hid, hardware from asthardwareid");

$hardwareidlist = array();

while ($item = db_fetch_object($sql)) {
	array_push2($hardwareidlist, $item->hardware, $item->hid);
}


$sql = db_query("select name from astbrand");
  
$brandlist = array();

while ($item = db_fetch_object($sql)) {
	array_push2($brandlist, $item->name, $item->name);
}  
  if (arg(1) == 'editaccount') {
  $group .= '<A HREF="'.url('astbilladm/emailme/'.$edit['accountcode']).'">'.t('Send account info to user').'</A><BR>';
  }
  $group .= form_radios(t('Change account type.'), 'tech', $tech, array(0 => 'SIP' , 1 => 'IAX2', 2 => 'Virtual Account', 3 => 'H323'));   
  $group .= form_textfield(t("Change the number(s) you want to forward to separated by &<BR>(Example: 9000&8000)<BR><FONT size=1>Note: you can not forward to another virtual account</FONT>"), "forwardto", $edit['forwardto'], 80, 150, null, null, false);
  $group .= form_select(t("Language"), "language", $edit['language'], $languagelist);
  $group .= form_textfield(t("Change the name of your account"), "accountname", $edit['accountname'], 80, 150, null, null, false);
  if (arg(1) == 'editaccount') {
  $group .= form_textfield(t("Password"), "secret", $edit['secret'], 30, 30, null, null, false);
  }
  $group .= form_textfield(t("Change your Caller ID Example: My Name <9000><BR><FONT SIZE=1>Note: Please select a number you wish to be dialed back on</FONT>"), "callerid", $edit['callerid'], 80, 150, null, null, false);
  $group .= form_select(t("Your Hardware"), "hardwareid", $edit['hardwareid'], $hardwareidlist);
  $group .= form_textfield(t("Set warning balance"), "lowbalance", $edit['lowbalance'], 5, 150, null, null, false);
  $group .= form_select(t("<FONT SIZE=1>Activate or Disable Warning Balance Email</FONT>"), "lowbalanceemail", $edit['lowbalanceemail'], array(0 => 'Disabled', 1 => 'Activate'));
  $group .= form_textfield(t("Set notification email"), "mailboxemail", $mailboxemail, 30, 150, null, null, false);
  $group .= form_select(t("Set the Account Status:"), "active", $edit['active'], array(0 => 'DISABLED', 1 => 'REALTIME', 5 => 'STATIC', 6 => 'ANI/CLI')); 
  $group .= '<BR>';
  $group .= t('ADVANCED SETTINGS: <BR>');
  $group .= '<BR>';
  $group .= t('<B>NAT:<BR></B>');
  $group .= t('yes = Always ignore info and assume NAT<BR>');
  $group .= t('no = Use NAT mode only according to RFC3581<BR>');
  $group .= t('never = Never attempt NAT mode or RFC3581 support<BR>');
  $group .= t('route = Assume NAT, dont send rport<BR>');
  $group .= form_select(NULL, 'nat', $nat, array(0 => t('Yes'), 1 => t('No'), 2 => t('Never'), 3 => t('Route')));
  $group .= form_select(t("Qualify"), 'qualify', $qualify, array(0 => 'On', 1 => 'Off'));

  if (arg(1) == 'editaccount') {
	  
  $group .= form_textfield(t("Context"), "context", $edit['context'], 30, 30, null, null, false);
  $group .= '<BR>';
  $group .= t('<FONT size=1><B>Note: These are user wide settings:</B></FONT>');
  $group .= form_select(t("Brand"), 'brand', $getastuser['brand'], $brandlist);
  $group .= form_textfield(t("Country Prefix"), "countryprefix", $getastuser['countryprefix'], 25, 25, null, null, false);
  $group .= form_textfield(t("Call Back To"), "callbackto", $getastuser['callbackto'], 25, 25, null, null, false);
  }
  
  
  // $group .= form_hidden('AmiTest', "JustTesting");
  
  if (arg(1) == 'createaccount') {
  $group .= form_submit(t('Create'));
  }
  if (arg(1) == 'editaccount') {
  $group .= form_submit(t('Save'));
  }
  $group .= form_submit(t('Back'));

  //$form = form_group(t('Account details'), $group);
  return form($group);
}

function _astpbx_accounts_load($account) {
  global $user;
//  return db_fetch_array(db_query("SELECT * FROM {bookmarks} WHERE uid = %d AND url = '%s'", $user->uid, $url));
  return db_fetch_array(db_query("SELECT accountcode, language, secret, context, nat, qualify, uid, hardwareid, tech, callerid, forwardto, mailboxemail, lowbalance, lowbalanceemail, accountname, active FROM astaccount WHERE accountcode = '%s'", $account));
}

// END FORM STUFF
// END ACCOUNTS STUFF


// ##########################################################################################################

function astpbx_currency($cur) {
	$output = $cur;
	if ($cur == "E") { $output = "?"; }
	if ($cur == "G") { $output = "?"; }
	// $output = "?";
	return $output;
}

// ##########################################################################################################
/**
 * Implementation of hook_user().
 */
function astpbx_user($type, &$edit, &$user, $category = NULL) {
  global $db_prefix; 
  // global $active_db; 
  // $result = mysql_query($query, $active_db); 
  
  switch ($type) {
/*    case 'load':
      return profile_load_profile($user);
    case 'register':
      return profile_form_profile($edit, $user, $category);
    case 'update':    */
    case 'insert':
		$sql = db_query ("CALL astCreateAccount(@a,$user->uid,'IAX')");
		$sql2 = db_query("select @a accountcode");
		$result = db_fetch_object($sql2);

		//   drupal_set_message(t('New Account Created: '. $result->accountcode));
		astpbx_sendemail("ASTARREG", $user->mail, $result->accountcode);
		// $sql = db_query ("insert into test (subject) values ('Drupal $db_prefix  $user->uid')");
		// $sql = db_query ("insert into test (subject) values ('$item->id')");


		/*  $sql = db_query ("select brand FROM astuser WHERE uid='%s'", $user->uid);   */
		/*  $sqlget = db_fetch_object($sql);   */

/*      return profile_save_profile($edit, $user, $category);
    case 'view':
      return profile_view_profile($user);
    case 'form':
      return profile_form_profile($edit, $user, $category);
    case 'validate':
      return profile_validate_profile($edit, $category);
    case 'categories':
      return profile_categories();   */

  }
}

function page_astpbx_emailme() {
	global $user;
        global $db_prefix;

	$edit = $_POST["edit"];
	$op = $_POST["op"];
	
	switch (($op ? $op : arg(1))) {
		case t('Confirm'):
			$accountcode = arg(2);
			if (!is_numeric($accountcode)) {
    				drupal_access_denied();
    				return;
			}
			
			
			if (valid_email_address($edit['email'])){
			} else {
				$message = t('Please enter a valid email address');
				form_set_error('email', $message);
				drupal_goto("astbilladm/emailme/".$accountcode);
			}

			$sql = db_fetch_object(db_query("SELECT tech FROM astaccount WHERE accountcode = '%s'", $accountcode));
			
			if ($sql->tech == 'IAX') {
				astpbx_sendemail("ASTARIAX", $edit['email'], $accountcode);
				$group .= 'Sent account information for IAX://'.$accountcode.' to '.$edit['email'].'<BR>';
			}
			
			if ($sql->tech == 'SIP') {
				astpbx_sendemail("ASTARSIP", $edit['email'], $accountcode);
				$group .= 'Sent account information for SIP://'.$accountcode.' to '.$edit['email'].'<BR>';
			}
			$group .= form_submit(t('Back'));
			$group .= form_submit(t('Return to account list'));
			$title = 'Email sent';
		break;
		
		case t('Back'):
			drupal_goto("astbilladm/editaccount/".arg(2));
		break;
		
		case t('Return to account list'):
			drupal_goto("astbilladm");
		break;

		default:
			$uid = db_fetch_object(db_query("SELECT uid FROM astaccount WHERE accountcode = '%s'", arg(2)));
			$email = db_fetch_object(db_query("SELECT mail FROM ".$db_prefix."users WHERE uid = '%s'", $uid->uid));
			$group .= 'Please check that the email bellow is correct before confirming.<BR>';
			$group .= form_textfield(t('Email:'), 'email', $email->mail, 30, 100);
		
			$group .= form_submit(t('Confirm'));
			$group .= form_submit(t('Back'));
			$title = 'Confirm';

	}
	
	$output = form($group);
	
	$account = '';
	_astentry_printtheme_best($output, $account, $title);	
}

function astpbx_sendemail($EmailText, $tomail, $accountcode) {
   
	$sql = db_query("select EmailText, Subject, BodyText, SenderEmail, bcc from astemailtext where EmailText = '$EmailText'");
	$result = db_fetch_object($sql);
	$sql2 = db_query("select secret from astaccount where accountcode = '$accountcode'");
	$result2 = db_fetch_object($sql2);

	$to      = $tomail;
	$subject = $result->Subject;

	$headers = 'From: ' . $result->SenderEmail . "\r\n";
	if (strlen($result->bcc) > 2) { $headers .= 'Bcc: ' . $result->bcc . "\r\n"; }
	
	// The message
	$message = $result->BodyText;

	$message = str_replace("%username%", $accountcode, $message);
	$message = str_replace("%password%", $result2->secret, $message);

	// In case any of our lines are larger than 70 characters, we should use wordwrap()
	$message = wordwrap($message, 70);
	
	// Send
	$rc = mail($to, $subject, $message, $headers);
//	if ($rc) {
//	  print "$result->bcc  $tomail    Mail successfully sent!<br>";
//	}
//	else {
//	  print "Failed to send mail<br>";
//	}
}


?>
