<?php
/*
 * AstBill  -- Billing, Routing and Management software for Asterisk and MySQL using Drupal
 *
 * www.astbill.com
 *
 * Asterisk -- A telephony toolkit for Linux.
 * Drupal   -- An Open source content management platform.
 *
 * 
 * Copyright (C) 2005, AOFFICE NOMINEE SECRETARIES LIMITED, UNITED KINGDOM.
 *
 * Andreas Mikkelborg <adoroar [Guess What?] astartelecom.com>
 * Are Casilla        <areast  [Guess What?] astartelecom.com>
 *
 *
 * This program is free software, distributed under the terms of
 * the GNU General Public License
 *
 * 2006.03.17 Version 0.9.18
 * 2006.08.27 Version 0.9.18
 */

/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/


function astpayment_help($section='') {
  $output = '';
  switch ($section) {
    case "admin/modules#description":
      $output = t("AstBill Payment Module");
      break;
  }
  return $output;
} // function astentry_help


function astpayment_menu($may_cache) {
  $items = array();
  $access = user_access('astpayment can use');
  $items[] = array('path' => 'astbilladm/payment/ocr',
                                  'title' => t('Read Bank file'),
                                  'callback' => 'astpayment_bank_import',
				  'callback arguments' => array(),
                                  'access' => $access);
                                 // 'type' => MENU_CALLBACK);

	// By using the MENU_CALLBACK type, we can register the callback for this
    // path but not have the item show up in the menu; the admin is not allowed
    // to enable the item in the menu, either.

  return $items;
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the astentry module
* At this point, we'll give permission to anyone who can access site content 
* or administrate the module:
*/
function astpayment_perm() {
	return array('astpayment can use');
  // return array('can use astentry');
} // function astentry_perm()


function astpayment_bank_import() {
/* See the file contrib/norwegian_ocr.txt for example of a file to import with this program.
   This is an example of a Norwegian BANK OCR file. It is exported from the bank for Astbill to import payment transactions.
   It is provided her as an example only. We hope Astbill in the future will provide examples of bank files from many 
   countries.
*/
	global $user;
	include_once 'class.csv.php';
	
	$clear = $_POST["clear"]['0'];
	
	$sqlfetch = db_fetch_array(db_query("select filename FROM astpaymentbatch order by date_created desc limit 1"));

	$output .= '
	<form enctype="multipart/form-data" action='.url("astbilladm/payment/ocr").' method="POST">
    	<input type="hidden" name="MAX_FILE_SIZE" value="0" /><BR>'.t('Last imported bankfile was').':<BR><BR>'.$sqlfetch['filename'].'<BR><BR>
    	'.t('Send this file').': <input name="import" type="file" /><BR>
	<BR>
    	<input type="submit" value="'.t('Send File').'" /><BR>
    	</form>
	';
	
	$output .= '<BR><BR>';
	
	if ($_FILES['import']['error'] == '0') {
				
		
		$csv = & new csv($_FILES['import']['tmp_name'], ';');
		$csv->SkipEmptyRows(TRUE); // Will skip empty rows. TRUE by default. (Shown here for example only).
  		$csv->TrimFields(TRUE); // Remove leading and trailing \s and \t. TRUE by default.
 
		$oops = 1;
  		while ($arr_data = $csv->NextLine()){
			$count = $csv->RowCount();
			
			$arr_data[0] = trim($arr_data[0]);
			$arr_data[1] = trim($arr_data[1]);
			$arr_data[2] = trim($arr_data[2]);
			$arr_data[3] = trim($arr_data[3]);
			$arr_data[4] = trim($arr_data[4]);
			$arr_data[5] = trim($arr_data[5]);
			$arr_data[6] = trim($arr_data[6]);
			$arr_data[7] = trim($arr_data[7]);
			$arr_data[8] = trim($arr_data[8]);
			$arr_data[9] = trim($arr_data[9]);
			
			if ($count == 1) {
				if (substr($arr_data[0],0,16) == 'NY00001000008080') { $oops = 0;} //$output .= 'OK1<BR>';}
			}
				/*
				if($oops == 0) {
					db_query("INSERT INTO astroute (countrycode,routename,pattern,costplan,connectcharge,includedseconds,billincrement,minimumcost,cost,trunk) 
					VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')",
					$arr_data[0], $arr_data[1], $arr_data[2], $arr_data[3], $arr_data[4], $arr_data[5], $arr_data[6], $arr_data[7], $arr_data[8], $arr_data[9]);
				}  */
			if ($count == 2) {
				$oops = 0;
				$bankacc = substr($arr_data[0],24,11);
				if ($bankacc == '81011174868') { 
					$oops = 0; 
					// $output .= 'OK2<BR>';
					$output .= '<B>'.t('Bank Account').':</B> '.substr($arr_data[0],24,11).'<BR><BR>';
					$filename = $_FILES['import']['name'];
					db_query("INSERT INTO astpaymentbatch (bankaccount, filename) 
					VALUES ('$bankacc','$filename')");
					$sqlfetch = db_fetch_array(db_query("SELECT LAST_INSERT_ID() lastid"));
					$batchid = $sqlfetch['lastid'];
				}
			}
			if ($count > 2) {
				$oops = 0;
				if (substr($arr_data[0],0,8) == 'NY091330' ) {
					$paydate = substr($arr_data[0],15,6);
					$paydate = '20'.substr($paydate,4,2).'-'.substr($paydate,2,2).'-'.substr($paydate,0,2);
					$kid = substr($arr_data[0],61,13);
					$amount = substr($arr_data[0],38,12) / 100;
					$output .= $paydate.'&nbsp;&nbsp;&nbsp;'.$kid.'&nbsp;&nbsp;&nbsp;'.$amount.'<BR>';
					db_query("INSERT INTO astpayment (accountcode, paytype,batchid,kid,kidbank,paiddate,paidamount,date_created) VALUES ('1030','OCR','$batchid','$kid','$kid','$paydate','$amount',now())");
					//$output .= $arr_data[0].'<BR>';
				}
				if (substr($arr_data[0],0,8) == 'NY090088' ) {
					$paydate = substr($arr_data[0],45,6);
					$paydate = '20'.substr($paydate,0,2).'-'.substr($paydate,4,2).'-'.substr($paydate,2,2);
					$amount = substr($arr_data[0],29,12) / 100;
					$output .= $paydate.'&nbsp;&nbsp;&nbsp;'.'&nbsp;&nbsp;<B>Total:</B>&nbsp;&nbsp;'.$amount.'<BR><BR>';
					db_query("UPDATE astpaymentbatch SET date_paid = '$paydate', totalprice = '$amount' WHERE batchid = $batchid");
					// $batchid;
				}
			}
  		}

		if ($oops == 0) {
			$rowcount = $csv->RowCount() - 1;
			$output .= '<B>'.t('Success:').'</B><BR>';
			$output .= t('File Name: '.$_FILES['import']['name']).'<BR>';
			$output .= t('File Type: '.$_FILES['import']['type']).'<BR>';
			$output .= t('File Size: '.$_FILES['import']['size']).' Bytes<BR>';

			$SQL = "UPDATE astinvoice inv, astpayment pay set inv.payment_status = 'FP', pay.payment_status = 'FP' where inv.payment_status <> 'FP' and inv.kid = pay.kid and inv.gross = pay.paidamount";
			db_query($SQL);


			//$output .= '<BR><B>'.t('Statistics:').'</B><BR>';
			if ($clear == '1') {
			$output .= $clearout;
			}
  			/*
			$output .= t('Number of rows Imported').": ".$rowcount;
			$output .= "<br>".t('Number of rows skipped').": ".$csv->SkippedRowCount().'<BR>';
			// $count = db_fetch_object(db_query("SELECT COUNT(*) value FROM astroute"));
			$output .= t('Number of rows after import: '.$count->value);
			*/
		} else {
		
			$output .= "<B>".t('Error: Invalid RouteList csv file!')."</B><BR>";
			$output .= t('File Name: '.$_FILES['import']['name']).'<BR>';
			$output .= t('File Type: '.$_FILES['import']['type']).'<BR>';
			$output .= t('File Size: '.$_FILES['import']['size']).' Bytes<BR>';
		}

	
	$title = t('Uploaded').' '.$_FILES['import']['name'];	
	}
	if ($_FILES['import']['error'] == '1') {
		$output .= '<B>'.t('Error: The uploaded file exceeds the upload_max_filesize directive in php.ini').'</B><BR>';
		$title = 'Error';
	}
	if ($_FILES['import']['error'] == '2') {
		$output .= '<B>'.t('Error: The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the HTML form (Please report this because this should not happen)').'</B><BR>';
		$title = 'Error';
	}
	if ($_FILES['import']['error'] == '3') {
		$output .= '<B>'.t('Error: The uploaded file was only partially uploaded!').'</B><BR>';
		$title = 'Error';
	}
	if ($_FILES['import']['error'] == '4') {
		$output .= '<B>'.t('Error: No file was uploaded!').'</B><BR>';
		$title = 'Error';
	}
	if ($_FILES['import']['error'] == '6') {
		$output .= '<B>'.t('Error: No temporary Folder available!').'</B><BR>';
		$title = 'Error';
	}
	if ($_FILES['import']['error'] == '7') {
		$output .= '<B>'.t('Error: Failed to write to disk!').'</B><BR>';
		$title = 'Error';
	}
	
	if (empty($title)) {
	$title = t('Import');
	}	
	
	astcore_printtheme($output, $title);
}
